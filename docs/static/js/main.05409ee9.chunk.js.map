{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFD,SAASO,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,SAAW,ECDhB,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAM,SAAAC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDZwBK,CAAa1B,GAAhCa,EAF4B,EAEjCN,KAAaa,EAFoB,EAEpBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,YEZ9B,IAAMgB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,gBADhB,mBACvB0C,EADuB,KACX3C,EADW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAACT,EAAU6B,GAAX,OACX,cAACV,EAAD,CAEInB,SAAUA,GADLA,Y,MCjBjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05409ee9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(categ => [inputValue,...categ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=TOZw9PXE4eJNiDTAWcu2rMICFER8UW0J`;\r\n    \r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport default function GifGrid({category}) {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     // setCategories(['HunterXHunter',...categories]);\r\n    //     setCategories(categ => [...categories,'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category, i) => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}